#!/usr/bin/env bash
set -e

SED=sed
ORGANISATION="fabric8io"
BACKLOG_COLUMN="Backlog"
BACKLOG="Build Team Kanban Board"
LABEL=bug
OPENSHIFTIO_REPO_ISSUE=openshiftio/openshift.io

type -p gsed 2>/dev/null >/dev/null && SED=gsed

function green() { msg="$@";echo "\e[40;38;5;82m${msg}\e[0m" ;}
function red() { msg="$@";echo "\e[40;91;5;82m${msg}\e[0m" ;}
function yellow() { msg="$@";echo "\e[40;91;5;93m${msg}\e[0m" ;}
function cyan() { msg="$@";echo "\e[40;91;5;96m${msg}\e[0m" ;}

function help() {
    echo "-l=LABEL -i[in progress] -m[assignme] -j[justopenshiftio] -ttest"
}

while getopts ":l:imjt" opt; do
    case $opt in
        t)
            test="yes"
            OPENSHIFTIO_REPO_ISSUE="chmouel/space2"
            REPO="chmouel/space3"
            ;;
        j)
            justopenshiftio=yes
            REPO=${OPENSHIFTIO_REPO_ISSUE}
            ;;
        m)
            assignme="--me"
            ;;
        l)
            LABEL=${OPTARG}
            ;;
        i)
            assignme="--me"
            osioinprogress="-l sprint/current"
            BACKLOG_COLUMN="In progress"
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            help
            exit 1
            ;;
    esac
done

shift $((OPTIND-1))

REPO=${REPO:-"$1"}

if [[ -z ${REPO} ]];then
    REPO=$(hub browse -u -- pull|sed 's,.*github.com/,,;s,/pull$,,' 2>/dev/null)
fi

[[ -z ${REPO} ]] && { echo "I need a upstream repo"; help; exit 1 ;}

if [[ $LABEL == "bug" ]];then
    osiolabel="type/bug"
elif [[ $LABEL == feature ]];then
    osiolabel="type/task"
else
    echo "invalid label $LABEL"
    exit 1
fi

echo -e "$(cyan Openshiftio): ${OPENSHIFTIO_REPO_ISSUE}"
[[ -z ${justopenshiftio} ]] && echo -e "$(cyan Upstream): $(red $REPO)"
[[ -z ${justopenshiftio} ]] && echo -e "$(cyan Label): $(yellow $LABEL)"
echo -e "$(cyan OSIO Label): $osiolabel"
echo -e "$(cyan Backlog): ${BACKLOG}"
echo -e "$(cyan Column): ${BACKLOG_COLUMN}"
[[ -n ${assignme} ]] && echo -e "$(cyan Assigned): $(red me)"

echo

read -n 1 -p "Are you OK with these?: " REPLY
[[ ${REPLY,,} != y ]] && exit

echo
echo

tempf=$(mktemp) || exit
trap "rm -f -- $tempf" EXIT

if [[ ${justopenshiftio} ]];then
    LABELS="-l area/pipelines -l team/build-cd -l ${osiolabel} ${osioinprogress}"
else
    LABELS="-l ${LABEL}"
fi

REPO_URL=$(github-issue-cli ${assignme} --output-file ${tempf} ${LABELS} ${REPO} 2>/dev/null)

if [[ -n ${justopenshiftio} ]];then
    OPENSHIFTIO_URL=${REPO_URL}
else
    labelp=$(basename ${REPO}|${SED} -e 's/-/ /g' -e 's/[^ _-]*/\u&/g')
    ${SED} -i -e "1 s/^/${labelp/Fabric8 }: /" -e "/# Everything starting/i\\${labelp} issue: ${REPO_URL}" ${tempf}
    OPENSHIFTIO_URL=$(github-issue-cli \
                      -n --input-file ${tempf} \
                      ${osioinprogress} \
                      -l area/pipelines -l team/build-cd -l ${osiolabel} \
                      ${assignme} ${OPENSHIFTIO_REPO_ISSUE})
fi


# TODO: can't do on an non org yet so avoiding it for now
if [[ -z ${test} ]];then
    github-project-cli -o ${ORGANISATION} -b "${BACKLOG}" -c "${BACKLOG_COLUMN}" -i "${OPENSHIFTIO_URL}" >${tempf}
    if type -p colout >/dev/null 2>/dev/null;then
        cat ${tempf}|colout '(https://\S*).*on (https://\S*).*in "([^"]+)" column' yellow,blue,red
    fi

    echo
fi

echo -e "$(red OpenShiftIO URL): ${OPENSHIFTIO_URL}"
[[ -z ${justopenshiftio} ]] && echo -e "$(red ${labelp} URL): ${REPO_URL}"

echo

[[ -n ${justopenshiftio}  ]] && \
    echo "Fix ${OPENSHIFTIO_REPO_ISSUE}#$(basename ${OPENSHIFTIO_URL})" || \
        echo "This closes ${OPENSHIFTIO_REPO_ISSUE}#$(basename ${OPENSHIFTIO_URL}) and closes #$(basename ${REPO_URL})"
