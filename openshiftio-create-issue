#!/usr/bin/env bash
set -e

BACKLOG_COLUMN="Backlog"
BACKLOG="Build Team Kanban Board"
LABEL=bug

assignme="--me"

function green() { msg="$@";echo "\e[40;38;5;82m${msg}\e[0m" ;}
function red() { msg="$@";echo "\e[40;91;5;82m${msg}\e[0m" ;}
function yellow() { msg="$@";echo "\e[40;91;5;93m${msg}\e[0m" ;}
function cyan() { msg="$@";echo "\e[40;91;5;96m${msg}\e[0m" ;}


while getopts ":l:in" opt; do
  case $opt in
    n)
      assignme=""
      ;;
    l)
      LABEL=${OPTARG}
      ;;
    i)
      BACKLOG_COLUMN="In progress"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      echo "-l LABEL -i"
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

REPO="$@"

[[ -z ${REPO} ]] && { echo "I need a upstream repo"; exit 1 ;}

if [[ $LABEL == "bug" ]];then
    osiolabel="type/bug"
elif [[ $LABEL == feature ]];then
    osiolabel="type/task"
else
    echo "invalid label $LABEL"
    exit 1
fi

cat <<EOF
$(echo -e $(cyan Openshiftio)): openshiftio/openshift.io
$(echo -e $(cyan Upstream)): $(echo -e $(red $REPO))
$(echo -e $(cyan Label)): $(echo -e $(yellow $LABEL))
$(echo -e $(cyan OSIO Label)): $osiolabel
$(echo -e $(cyan Backlog)): ${BACKLOG}
$(echo -e $(cyan Column)):: ${BACKLOG_COLUMN}
EOF
[[ ${me} ]] && echo "Assigned: me."

echo

read -n 1 -p "Are you OK with these?: " REPLY
[[ ${REPLY,,} != y ]] && exit
echo

tempf=$(mktemp) || exit
trap "rm -f -- $tempf" EXIT

REPO_URL=$(github-issue-cli --me --output-file ${tempf} -l ${LABEL} ${REPO} 2>/dev/null)

labelp=$(basename ${REPO_URL}|gsed -e 's/-/ /g' -e 's/[^ _-]*/\u&/g')

gsed -i -e "1 s/^/${labelp/Fabric8 }: /" -e "/# Everything starting/i\\${labelp} issue: ${REPO_URL}" ${tempf}

OPENSHIFTIO_URL=$(github-issue-cli -n --input-file ${tempf} -l area/pipelines -l sprint/current -l team/build-cd -l ${osiolabel} --me openshiftio/openshift.io)

github-project-cli -o fabric8io -b "${BACKLOG}" -c "${BACKLOG_COLUMN}" -i "${OPENSHIFTIO_URL}"

echo

echo -e "$(red OpenShiftIO URL): ${OPENSHIFTIO_URL}"
echo "$(red ${labelp} URL): ${REPO_URL}"
